#!/bin/bash

mkloop()
{
  INFO="$(sfdisk -d "${IMGFILE}")"
  START=$(grep type=83 <<< "${INFO}" | sed -n 's|^.*start=\s\+\([0-9]\+\).*$|\1|p')
  SIZE=$(grep type=83 <<< "${INFO}" | sed -n 's|^.*size=\s\+\([0-9]\+\).*$|\1|p')
  LOOP="$(losetup -f --show -o $((${START} * 512)) --sizelimit $((${SIZE} * 512)) "${IMGFILE}")"
  if [ $? -ne 0 ]; then
    errexit "Unable to create ROOT loop device"
  fi
}

rmloop()
{
   losetup -d "${LOOP}"
}

fsckerr()
{
  rmloop
  errexit "Filesystem appears corrupted "$1" resize2fs"
}

errexit()
{
  echo ""
  echo "$1"
  echo ""
  exit 1
}

if [ $(id -u) -ne 0 ]; then
  errexit "$0 must be run as root user"
fi

IMGFILE="$1"

if [ "${IMGFILE}" = "" ]; then
  errexit "Usage: $0 imagefile [Additional MB]"
fi

if [ ! -f "${IMGFILE}" ] || [ ! -s "${IMGFILE}" ]; then
  errexit "${IMGFILE} is missing or empty"
fi

mkloop
FS_TYPE=$(blkid "${LOOP}" | sed -n 's|^.*TYPE="\(\S\+\)".*|\1|p')
rmloop
if [ "${FS_TYPE}" = "f2fs" ]; then
  errexit "Cannot shrink F2FS filesystem"
fi

answer="$2"
if [[ ! "${answer}" =~ ^[0-9]+$ ]]; then
  echo ""
  while :
  do
    read -r -e -i "${answer}" -p "Additional MB? " answer
    if [[ "${answer}" =~ ^[0-9]*$ ]]; then
      break
    fi
  done
fi
while [ "${answer:0:1}" = "0" ]; do
  answer="${answer:1}"
done
if [ ${#answer} -eq 0 ]; then
  answer=0
fi
ADDMB=${answer}

mkloop
e2fsck -f "${LOOP}"
if [ $? -ne 0 ]; then
  fsckerr "before"
fi
echo ""
resize2fs -M "${LOOP}"
resize2fs -M "${LOOP}"
resize2fs -M "${LOOP}"
e2fsck -f "${LOOP}"
if [ $? -ne 0 ]; then
  fsckerr "after"
fi
INFO="$(tune2fs -l "${LOOP}" 2>/dev/null)"
rmloop
NEWSIZE=$(grep '^Block count:' <<< "${INFO}" | awk '{print $3}')
BLKSIZE=$(grep '^Block size:' <<< "${INFO}" | awk '{print $3}')
NEWEND=$((${START} + (${NEWSIZE} * (${BLKSIZE} / 512)) + ((${ADDMB} * 1024 * 1024) / 512) - 1))
truncate -s $(((${NEWEND} + 1) * 512)) "${IMGFILE}"
fdisk "${IMGFILE}" <<EOF > /dev/null
p
d
2
n
p
2
${START}
${NEWEND}
p
w
EOF
if [ ${ADDMB} -ne 0 ]; then
  echo ""
  mkloop
  e2fsck -f "${LOOP}"
  if [ $? -ne 0 ]; then
    fsckerr "before"
  fi
  echo ""
  resize2fs "${LOOP}"
  e2fsck -f "${LOOP}"
  if [ $? -ne 0 ]; then
    fsckerr "after"
  fi
  rmloop
fi
echo "Resize complete. Press Enter to exit."
read i
